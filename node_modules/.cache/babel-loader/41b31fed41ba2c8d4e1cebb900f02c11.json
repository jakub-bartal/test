{"ast":null,"code":"import _classCallCheck from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kubo/Projects/webscope-demo/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.firstToUpper = function (_ref) {\n      var target = _ref.target;\n      // These are converting just first letter of the string.\n      // 1) Lowercase and uppercase letters are separated from each other just with 32 points in ascii table\n      // const asciiCodeForFirstLetter = input.charCodeAt(0);\n      // const upperCaseLetterAlternative = String.fromCharCode(asciiCodeForFirstLetter - 32)\n      // return upperCaseLetterAlternative + input.slice(1);\n      // 2) Using javascript build-in method toUpperCase() as alternative\n      // return `${stringToFormat.charAt(0).toUpperCase()}${stringToFormat.slice(1)}`;\n      // 3) Using regex as alternative for method charAt()\n      // return stringToFormat.replace(/ˆ\\w/, c => c.toUpperCase());\n      // let result = '';\n      // for (let i = 0; i < input.length; ++i) {\n      //   let charCode = input.charCodeAt(i);\n      //   if (charCode < 65 || charCode > 90) {\n      //     // NOT an uppercase ASCII character\n      //     // Append the original character\n      //     result += input.substr(i, 1);\n      //   } else {\n      //     // Character in the ['A'..'Z'] range\n      //     // Append the lowercase character\n      //     result += String.fromCharCode(charCode + 32);\n      //   }\n      // }\n      //\n      // return result;\n      var value = target.value.split(\" \").forEach(function (word) {\n        return word.replace(/ˆ\\w/, function (c) {\n          return c.toUpperCase();\n        });\n      }).join(\" \");\n      console.log(value);\n\n      _this.setState({\n        value: target.value\n      });\n    };\n\n    _this.state = {\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.value,\n        onChange: this.firstToUpper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kubo/Projects/webscope-demo/src/App.js"],"names":["React","Component","App","props","firstToUpper","target","value","split","forEach","word","replace","c","toUpperCase","join","console","log","setState","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAQnBC,YARmB,GAQJ,gBAAc;AAAA,UAAZC,MAAY,QAAZA,MAAY;AAC3B;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAaC,KAAb,CAAmB,GAAnB,EAAwBC,OAAxB,CAAgC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,WAAF,EAAJ;AAAA,SAArB,CAAJ;AAAA,OAApC,EAAmFC,IAAnF,CAAwF,GAAxF,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,YAAKU,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAED,MAAM,CAACC;AAAf,OAAd;AACD,KAxCkB;;AAGjB,UAAKW,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;;;6BAoCQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKF,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EArDeH,S;;AAwDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    }\n  }\n\n  firstToUpper = ({target}) => {\n    // These are converting just first letter of the string.\n\n    // 1) Lowercase and uppercase letters are separated from each other just with 32 points in ascii table\n    // const asciiCodeForFirstLetter = input.charCodeAt(0);\n    // const upperCaseLetterAlternative = String.fromCharCode(asciiCodeForFirstLetter - 32)\n    // return upperCaseLetterAlternative + input.slice(1);\n\n    // 2) Using javascript build-in method toUpperCase() as alternative\n    // return `${stringToFormat.charAt(0).toUpperCase()}${stringToFormat.slice(1)}`;\n\n    // 3) Using regex as alternative for method charAt()\n    // return stringToFormat.replace(/ˆ\\w/, c => c.toUpperCase());\n\n    // let result = '';\n    // for (let i = 0; i < input.length; ++i) {\n    //   let charCode = input.charCodeAt(i);\n    //   if (charCode < 65 || charCode > 90) {\n    //     // NOT an uppercase ASCII character\n    //     // Append the original character\n    //     result += input.substr(i, 1);\n    //   } else {\n    //     // Character in the ['A'..'Z'] range\n    //     // Append the lowercase character\n    //     result += String.fromCharCode(charCode + 32);\n    //   }\n    // }\n    //\n    // return result;\n    const value = target.value.split(\" \").forEach(word => word.replace(/ˆ\\w/, c => c.toUpperCase())).join(\" \");\n    console.log(value);\n    this.setState({value: target.value})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input\n          value={this.state.value}\n          onChange={this.firstToUpper}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}