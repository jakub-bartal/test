{"ast":null,"code":"import _classCallCheck from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kubo/Projects/webscope-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kubo/Projects/webscope-demo/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.firstToUpper = function (input) {\n      // These are converting just first letter of the string.\n      // 1) Lowercase and uppercase letters are separated from each other just with 32 points in ascii table\n      // const asciiCodeForFirstLetter = input.charCodeAt(0);\n      // const upperCaseLetterAlternative = String.fromCharCode(asciiCodeForFirstLetter - 32)\n      // return upperCaseLetterAlternative + input.slice(1);\n      // 2) Using javascript build-in method toUpperCase() as alternative\n      // return `${stringToFormat.charAt(0).toUpperCase()}${stringToFormat.slice(1)}`;\n      // 3) Using regex as alternative for method charAt()\n      // return stringToFormat.replace(/ˆ\\w/, c => c.toUpperCase());\n      var result = '';\n\n      for (var i = 0; i < input.length; ++i) {\n        var charCode = input.charCodeAt(i);\n\n        if (charCode < 65 || charCode > 90) {\n          // NOT an uppercase ASCII character\n          // Append the original character\n          result += input.substr(i, 1);\n        } else {\n          // Character in the ['A'..'Z'] range\n          // Append the lowercase character\n          result += String.fromCharCode(charCode + 32);\n        }\n      }\n\n      input.split(\" \").forEach(function (word) {});\n      return result;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"kubis\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kubo/Projects/webscope-demo/src/App.js"],"names":["React","Component","App","firstToUpper","input","result","i","length","charCode","charCodeAt","substr","String","fromCharCode","split","forEach","word"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;;UAEJC,Y,GAAe,UAACC,KAAD,EAAW;AACxB;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACrC,YAAIE,QAAQ,GAAGJ,KAAK,CAACK,UAAN,CAAiBH,CAAjB,CAAf;;AACA,YAAIE,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAAhC,EAAoC;AAClC;AACA;AACAH,UAAAA,MAAM,IAAID,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgB,CAAhB,CAAV;AACD,SAJD,MAIO;AACL;AACA;AACAD,UAAAA,MAAM,IAAIM,MAAM,CAACC,YAAP,CAAoBJ,QAAQ,GAAG,EAA/B,CAAV;AACD;AACF;;AAEDJ,MAAAA,KAAK,CAACS,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,UAAAC,IAAI,EAAI,CAEhC,CAFD;AAIA,aAAOV,MAAP;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD;;;;EA3CeJ,S;;AA8ClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  firstToUpper = (input) => {\n    // These are converting just first letter of the string.\n\n    // 1) Lowercase and uppercase letters are separated from each other just with 32 points in ascii table\n    // const asciiCodeForFirstLetter = input.charCodeAt(0);\n    // const upperCaseLetterAlternative = String.fromCharCode(asciiCodeForFirstLetter - 32)\n    // return upperCaseLetterAlternative + input.slice(1);\n\n    // 2) Using javascript build-in method toUpperCase() as alternative\n    // return `${stringToFormat.charAt(0).toUpperCase()}${stringToFormat.slice(1)}`;\n\n    // 3) Using regex as alternative for method charAt()\n    // return stringToFormat.replace(/ˆ\\w/, c => c.toUpperCase());\n\n    let result = '';\n    for (let i = 0; i < input.length; ++i) {\n      let charCode = input.charCodeAt(i);\n      if (charCode < 65 || charCode > 90) {\n        // NOT an uppercase ASCII character\n        // Append the original character\n        result += input.substr(i, 1);\n      } else {\n        // Character in the ['A'..'Z'] range\n        // Append the lowercase character\n        result += String.fromCharCode(charCode + 32);\n      }\n    }\n\n    input.split(\" \").forEach(word => {\n\n    })\n\n    return result;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        kubis\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}